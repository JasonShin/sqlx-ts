name: End to end tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  node-install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 12, 14, 15, 16, 17, 18, 19, 20 ]
    defaults:
      run:
        working-directory: ./node
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install sqlx-ts using npm
        run: npm install

      - name: Run sqlx-ts version after install
        run: ./sqlx-ts --version

      - name: run sqlx-ts help after install
        run: ./sqlx-ts --help

      - name: Install using local install.sh
        run: node local-postinstall.js

      - name: Run sqlx-ts version after local install
        run: ./sqlx-ts --version

      - name: run sqlx-ts help after local install
        run: ./sqlx-ts --help

  e2e:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        db:
          - mysql: 8
          - mysql: 5.7
          - mysql: 5.6
          - postgres: 16
          - postgres: 15
          - postgres: 14
          - postgres: 13
          - postgres: 12

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2
        with:
          # To only cache runs from `master`:
          save-if: ${{ github.ref == 'refs/heads/master' }}
          # Specifies what to use as the backend providing cache
          # Can be set to either "github" or "buildjet"
          # default: "github"
          cache-provider: "github"


      - name: build docker-compose services for integration tests
        run: docker compose -f docker-compose.yml up -d
        env:
          MYSQL_VERSION: ${{ matrix.db.mysql }}
          PG_VERSION: ${{ matrix.db.postgres }}
          MYSQL_MIGRATION_FILE: "${{ matrix.db.mysql == '5.6' && 'mysql_migration_5_6.sql' || 'mysql_migration.sql' }}"

      - uses: GuillaumeFalourd/wait-sleep-action@v1
        with:
          time: '10' # for 10 seconds

      - name: Check the docker-compose services running
        run: docker ps -a

      - name: build
        run: cargo build

      - name: Add failure.ts test file
        run: |
          mkdir -p tests/staging
          cat << 'EOF' > tests/staging/failure.ts
          import { sql } from 'sqlx-ts'

          const selectSql4 = sql`
          SELECT itemz.*
          FROM items;
          `
          EOF

      - name: Run failure test
        run: |
          set +e
          ./target/debug/sqlx-ts --config=.sqlxrc.sample.json tests/staging
          if [ $? -eq 0 ]; then
            echo "Expected failure, but command succeeded."
            exit 1
          fi
          echo "Command failed as expected."
          
          rm -f tests/staging/failure.ts

      - name: Add happy.ts test file
        run: |
          mkdir -p tests/staging
          cat << 'EOF' > tests/staging/happy.ts
          import { sql } from 'sqlx-ts'

          const selectSql4 = sql`
          SELECT items.*
          FROM items;
          `
          EOF

      - name: Run happy test
        run: ./target/debug/sqlx-ts --config=.sqlxrc.sample.json tests/staging