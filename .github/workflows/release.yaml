on:
  release:
    types: [created]

name: release

jobs:
  build-release:
    name: release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-20.04
            rust: stable
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-12
            rust: stable
            target: x86_64-apple-darwin
          - build: windows
            os: windows-2022
            rust: stable
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Install packages (Ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          ci/ubuntu-install-packages

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Build release binary
        run: cargo build --verbose --release

      - name: Build archive
        shell: bash
        run: |
          ls target/release
          file_name="sqlx_ts_${{ github.event.release.tag_name }}_${{ matrix.target }}"
          cp target/release/sqlx-ts sqlx-ts

          if [ "${{ matrix.os }}" = "windows-2022" ]; then
            7z a "$file_name.zip" sqlx-ts
            echo "ASSET=$file_name.zip" >> $GITHUB_ENV
          else
            tar -czf "$file_name.tar.gz" sqlx-ts
            echo "ASSET=$file_name.tar.gz" >> $GITHUB_ENV
          fi
          
      - name: Upload release archive
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream