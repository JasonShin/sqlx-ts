"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[904],{3716:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"type-generation/delete","title":"DELETE statement","description":"To read more about how sqlx-ts translates query parameters, visit this page","source":"@site/docs/type-generation/delete.md","sourceDirName":"type-generation","slug":"/type-generation/delete","permalink":"/sqlx-ts/type-generation/delete","draft":false,"unlisted":false,"editUrl":"https://github.com/jasonshin/sqlx-ts/edit/main/docs/type-generation/delete.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"UPDATE statements","permalink":"/sqlx-ts/type-generation/update"},"next":{"title":"Annotations for overrides","permalink":"/sqlx-ts/type-generation/annotations"}}');var r=n(4848),a=n(8453);const o={sidebar_position:4},i="DELETE statement",l={},c=[{value:"MySQL",id:"mysql",level:2},{value:"PostgreSQL",id:"postgresql",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"delete-statement",children:"DELETE statement"})}),"\n",(0,r.jsxs)(t.p,{children:["To read more about how sqlx-ts translates query parameters, ",(0,r.jsx)(t.a,{href:"/type-generation#capabilities",children:"visit this page"})]}),"\n",(0,r.jsx)(t.h2,{id:"mysql",children:"MySQL"}),"\n",(0,r.jsx)(t.p,{children:"Query params within a DELETE statement will be converted Typescript types"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"const someQuery = sql`\nDELETE FROM items WHERE id = ?\n`\n"})}),"\n",(0,r.jsx)(t.p,{children:"would generate following"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"export type SomeQueryParams = [number]\n\nexport interface ISomeQueryQuery {\n    params: SomeQueryParams\n    results: null\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"postgresql",children:"PostgreSQL"}),"\n",(0,r.jsx)(t.p,{children:"If you the following query in your Typescript code"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"const someQuery = sql`\nDELETE FROM items WHERE id = $1;\n`\n"})}),"\n",(0,r.jsx)(t.p,{children:"would result in"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"export type SomeQueryParams = [number]\n\nexport interface ISomeQueryQuery {\n    params: SomeQueryParams\n    results: null\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(6540);const r={},a=s.createContext(r);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);